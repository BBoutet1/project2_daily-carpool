

Exempple to calculate distance with javascript api
https://developers.google.com/maps/documentation/javascript/examples/distance-matrix


Api Key with multiple origine and destinations

https://maps.googleapis.com/maps/api/distancematrix/json?origins=Vancouver+BC|Seattle&destinations=San+Francisco|Victoria+BC&mode=bicycling&key=AIzaSyDE2yBUEZx3Cup_pwq22o_WferVgBpgSdE


Api key with destination and waypoints

https://maps.googleapis.com/maps/api/directions/json?origin=Boston,MA&destination=Concord,MA&waypoints=Charlestown,MA|Lexington,MA&key=AIzaSyDE2yBUEZx3Cup_pwq22o_WferVgBpgSdE

API

browserify is a "require" for browser

$ npm install browserify

$ browserify routesMap.js -o bundle.js


var numWaypoints = jsonArray.passenger1.length;
let waypoints = ""
for (var i = 0; i < numWaypoints; i++) {
    if (i !== 0) { waypoints = waypoints + "|" + sonArray.passenger1[i] } else { waypoints = +jsonArray.passenger1[i] }
};

async function durations() {
    // calculate route duration
    var directDuration = await time.getDuration(jsonArray.driver[0], jsonArray.driver[1]);
    var carPoolDuration = await time.getDuration(jsonArray.driver[0], jsonArray.driver[1], waypoints, numWaypoints);
    var timeDifference = carPoolDuration[0] - directDuration[0];
    console.log(numWaypoints)
    console.log(waypoints)
    console.log(directDuration)
    console.log(carPoolDuration)
}
durations()



console.log(numWaypoints)
console.log(waypoints)
console.log(directDuration)
console.log(carPoolDuration)



//Time conversion
function timeConversion(time) {
    // Converting seconds in hours and minutes
    const hours = Math.floor(time / 3600);
    const minutes = Math.floor((time % 3600) / 60);
    const duration = hours + " hours " + minutes + "minutes"
    return duration;
}
timeDifference = timeConversion(timeDifference);
carPoolDuration = timeConversion(carPoolDuration);
directDuration = timeConversion(directDuration);

// Writting time on Map

document.getElementById("directTime").innerHTML = directDuration;
document.getElementById("carpoolTime").innerHTML = carPoolDuration;
document.getElementById("difference").innerHTML = timeDifference

app.use((req, res,next)=>{
res.setHeader('Access-Control-Allow-Origin', '*');
res.setHeader('Access-Control-Allow-Methods', 'GET, POST, PATCH, DELETE');
res.setHeader('Access-Control-Allow-Headers', 'Content-Type, Authorisation');
next();
});




Register (HTML)--->DB-->API--->MAP(HTML)-->DB--API-HTML(new route)


   function durationNdistance(result) {
                            let distance = 0; //distance
                            let time = 0; //duration in secondes
                            let duration = ""; //duration in hours and minutes
                            let route = result.routes[0];
                            for (var i = 0; i < route.legs.length; i++) {
                                distance += myroute.legs[i].distance.value;
                                durationS += myroute.legs[i].duration.value;
                                console.log(distance)
                            }
                            distance = distance / 1000;
                            // Converting seconds in hours and minutes
                            let hours = Math.floor(time / 3600);
                            let minutes = Math.round((time % 3600) / 60);
                            let duration = hours + " h " + minutes + " min";

                            waypts.push(duration);
                            waypts.push(duration);
                        }






                         $("#signIn").on("click", displayUser);

    function displayUser(event) {
        event.preventDefault();
        let directionsService = new google.maps.DirectionsService();
        let num, map, data, bounds;
        let requestArray = [],
            renderArray = [];

        let inputFname = $("#firstName").val().trim();
        let inputType = $("#userType option:selected").val();
        let userFname = "";
        let userLname = "";
        let userType = "";

        let isUser = false;

        let queryURL = "";



        if (inputType == "Driver") {
            queryURL = "http://localhost:8080/api/drivers"
        } else {
            queryURL = "http://localhost:8080/api/passengers"
        }
------------------------------------------------------------------------------------------------------------------
if (userType = "Passenger") { pickPassenger() } else { pickDriver() }

                        generateRequests()
                        break;
                    }
                    // For a Driver user make route with each available passenger
                    function pickPassenger() {
                        let queryURL2 = "http://localhost:8080/api/passengers"
                        $.ajax({
                                url: queryURL,
                                method: "GET"
                            })
                            .then(function(response2) {
                                for (let i = 0; i < response2.length; i++) {
                                    let passengerRoute = [response2[i].homeAddress, response2[i].workAddress]
                                    passengerRoute.splice(1, 0, userOrigin, userDestination);
                                    routesArray["derouted" + i] = passengerRoute;
                                    console.log(routesArray);
                                }
                            });
                    }

                    // For a Passenger user make route with each available driver
                    function pickDriver() {
                        let queryURL2 = "http://localhost:8080/api/drivers"

                        $.ajax({
                                url: queryURL,
                                method: "GET"
                            })
                            .then(function(response2) {
                                for (let i = 0; i < response2.length; i++) {
                                    let passengerRoute = [userOrigin, userDestination]
                                    passengerRoute.splice(1, 0, response2[i].homeAddress, response2[i].workAddress);
                                    routesArray["derouted" + i] = passengerRoute;
                                }
                            });
                    }

          if (userType = "Driver") { $("#list").html("Select a passenger"); }
